let arr=[3,6,18,0,0,null, '-','?'];

function find(array) {
    let nullChar=0;
    let evend=0;
    let odd=0;
    for (let i = 0; i < array.length; i++){
        if (array [i] === 0){
            ++nullChar;
        }
       else if (typeof array [i] =='number' && !isNaN(array[i])){
                    if (array [i] % 2 === 0){
                        ++evend;
                }
                    else ++odd;

        }
    }
    console.log('кол-во элементов равных 0 -  '+nullChar);
    console.log('кол-во элементов четных  -  '+evend);
    console.log('кол-во элементов нечетных  - '+odd);
}

find(arr);

// Есть ошибка в проверке на числовые значения: если вы хотите отсеять все значения, кроме чисел, одной проверки на typeof недостаточно, потому что они не учитывают значения NaN. NaN имеет тип number, при том что не является числом, поэтому к проверке typeof === 'number' нужно добавлять проверку isNaN
// Также не совсем верно сделана функция. В текущем варианте использование функции не имеет смысла, т.к. внутри функции используется массив, заданный в глобальной области видимости, и получается что её нельзя переиспользовать и подсчитать количество элементов в другом массиве, не меняя код функции. Функция должна быть максимально универсальной, поэтому массив для подсчета нужно передавать в качестве аргумента. Переменные-счетчики также должны быть частью функции.